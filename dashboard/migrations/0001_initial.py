# Generated by Django 4.2.16 on 2025-08-01 07:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('alternative_phone', models.CharField(blank=True, max_length=20)),
                ('alternative_email', models.EmailField(blank=True, max_length=254)),
                ('alternative_contact_person', models.CharField(blank=True, max_length=255)),
                ('source', models.CharField(choices=[('website', 'Website'), ('google_ppc', 'Google PPC'), ('google_performance_max', 'Google Performance Max'), ('google_discovery', 'Google Discovery'), ('google_display', 'Google Display'), ('google_demand_gen', 'Google Demand Generation'), ('facebook_ads', 'Facebook Ads'), ('facebook_organic', 'Facebook Organic'), ('instagram_ads', 'Instagram Ads'), ('linkedin_ads', 'LinkedIn Ads'), ('referral', 'Referral'), ('walk_in', 'Walk In'), ('phone_call', 'Phone Call'), ('ivr_call', 'IVR Call'), ('whatsapp', 'WhatsApp'), ('email_campaign', 'Email Campaign'), ('sms_campaign', 'SMS Campaign'), ('other', 'Other')], max_length=30)),
                ('source_details', models.TextField(blank=True, help_text='Campaign details, creative info, etc.')),
                ('utm_source', models.CharField(blank=True, max_length=100)),
                ('utm_medium', models.CharField(blank=True, max_length=100)),
                ('utm_campaign', models.CharField(blank=True, max_length=100)),
                ('utm_content', models.CharField(blank=True, max_length=100)),
                ('utm_term', models.CharField(blank=True, max_length=100)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('referrer_url', models.URLField(blank=True)),
                ('landing_page', models.URLField(blank=True)),
                ('stage_changed_at', models.DateTimeField(auto_now_add=True)),
                ('is_recapture', models.BooleanField(default=False, help_text='Lead from multiple sources')),
                ('recapture_count', models.PositiveIntegerField(default=0)),
                ('quality_score', models.PositiveIntegerField(default=0, help_text='Lead quality score 1-10')),
                ('budget_min', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('budget_max', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('preferred_location', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('industry', models.CharField(blank=True, choices=[('it', 'Information Technology'), ('finance', 'Finance & Banking'), ('healthcare', 'Healthcare'), ('education', 'Education'), ('manufacturing', 'Manufacturing'), ('retail', 'Retail'), ('real_estate', 'Real Estate'), ('government', 'Government'), ('startup', 'Startup'), ('other', 'Other')], max_length=20)),
                ('job_function', models.CharField(blank=True, choices=[('ceo', 'CEO/Founder'), ('cto', 'CTO'), ('manager', 'Manager'), ('director', 'Director'), ('executive', 'Executive'), ('consultant', 'Consultant'), ('entrepreneur', 'Entrepreneur'), ('employee', 'Employee'), ('student', 'Student'), ('retired', 'Retired'), ('other', 'Other')], max_length=20)),
                ('company_name', models.CharField(blank=True, max_length=255)),
                ('annual_income', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('pain_points', models.TextField(blank=True)),
                ('goals_objectives', models.TextField(blank=True)),
                ('timeline', models.CharField(blank=True, help_text='When planning to buy', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='General notes and remarks')),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('last_contact_date', models.DateField(blank=True, null=True)),
                ('next_action', models.CharField(blank=True, max_length=255)),
                ('requires_callback', models.BooleanField(default=False)),
                ('callback_time', models.DateTimeField(blank=True, null=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_leads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LeadSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(max_length=50)),
                ('cost_per_lead', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('monthly_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('tracking_url', models.URLField(blank=True)),
                ('utm_parameters', models.JSONField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeadStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('new', 'New'), ('hot', 'Hot'), ('warm', 'Warm'), ('cold', 'Cold'), ('closed', 'Closed'), ('dead', 'Dead/Junk')], max_length=20)),
                ('order', models.PositiveIntegerField(default=0)),
                ('color', models.CharField(default='#6b7280', max_length=7)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('auto_progress_days', models.PositiveIntegerField(blank=True, help_text='Auto progress after X days', null=True)),
                ('requires_action', models.BooleanField(default=False, help_text='Requires manual action to progress')),
                ('is_final_stage', models.BooleanField(default=False, help_text='Final stage in journey')),
            ],
            options={
                'ordering': ['category', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('city', models.CharField(default='', max_length=100)),
                ('state', models.CharField(default='', max_length=100)),
                ('pincode', models.CharField(default='', max_length=10)),
                ('description', models.TextField()),
                ('property_type', models.CharField(choices=[('apartment', 'Apartment'), ('villa', 'Villa'), ('plot', 'Plot'), ('commercial', 'Commercial'), ('warehouse', 'Warehouse'), ('office', 'Office Space')], default='apartment', max_length=20)),
                ('bhk_options', models.CharField(help_text='e.g., 1BHK, 2BHK, 3BHK', max_length=100)),
                ('price_min', models.DecimalField(decimal_places=2, max_digits=12)),
                ('price_max', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('construction', 'Under Construction'), ('completed', 'Completed'), ('featured', 'Featured'), ('sold_out', 'Sold Out')], default='planning', max_length=20)),
                ('area_min', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum area in sq ft', max_digits=10, null=True)),
                ('area_max', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum area in sq ft', max_digits=10, null=True)),
                ('total_units', models.PositiveIntegerField(blank=True, null=True)),
                ('available_units', models.PositiveIntegerField(blank=True, null=True)),
                ('possession_date', models.DateField(blank=True, null=True)),
                ('virtual_tour_url', models.URLField(blank=True, help_text='360Â° virtual tour link')),
                ('video_url', models.URLField(blank=True, help_text='Property video link')),
                ('brochure_pdf', models.FileField(blank=True, null=True, upload_to='brochures/')),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='projects/')),
                ('floor_plan', models.ImageField(blank=True, null=True, upload_to='projects/')),
                ('amenities', models.TextField(blank=True, help_text='List amenities separated by commas')),
                ('features', models.TextField(blank=True, help_text='List key features separated by commas')),
                ('nearby_schools', models.TextField(blank=True)),
                ('nearby_hospitals', models.TextField(blank=True)),
                ('nearby_malls', models.TextField(blank=True)),
                ('transportation', models.TextField(blank=True)),
                ('developer_name', models.CharField(blank=True, max_length=255)),
                ('contact_person', models.CharField(blank=True, max_length=255)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('ivr_number', models.CharField(blank=True, help_text='IVR Number for this project', max_length=20)),
                ('rera_number', models.CharField(blank=True, max_length=100)),
                ('approval_status', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('color', models.CharField(default='#3b82f6', max_length=7)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Task Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TaskStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('color', models.CharField(default='#6b7280', max_length=7)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='WhatsAppTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('stage', models.CharField(choices=[('stage_1_landing', 'Stage 1 - Call Landing'), ('stage_2_interested', 'Stage 2 - Interested Call'), ('stage_3_not_picking', 'Stage 3 - Not Picking Up'), ('stage_4_missed_ivr', 'Stage 4 - Missed IVR'), ('stage_5_site_visit', 'Stage 5 - Site Visit/Meeting'), ('stage_6_day_7', 'Stage 6 - Day 7 Follow-up'), ('stage_7_day_15', 'Stage 7 - Day 15 Follow-up'), ('stage_8_day_30', 'Stage 8 - Day 30 Follow-up')], max_length=30, unique=True)),
                ('message_template', models.TextField(help_text='Use {name}, {project_name}, {number} as placeholders')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='WhatsAppMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_content', models.TextField()),
                ('phone_number', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('message_id', models.CharField(blank=True, max_length=100)),
                ('api_response', models.JSONField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
                ('failure_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='whatsapp_messages', to='dashboard.lead')),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.whatsapptemplate')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('manager', 'Manager'), ('team_lead', 'Team Lead'), ('senior_sales_executive', 'Senior Sales Executive'), ('sales_executive', 'Sales Executive'), ('marketing_executive', 'Marketing Executive'), ('telecaller', 'Telecaller'), ('intern', 'Intern')], max_length=30)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('joining_date', models.DateField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('target_leads_monthly', models.PositiveIntegerField(default=0)),
                ('target_site_visits_monthly', models.PositiveIntegerField(default=0)),
                ('target_closures_monthly', models.PositiveIntegerField(default=0)),
                ('can_access_dashboard', models.BooleanField(default=True)),
                ('can_access_projects', models.BooleanField(default=True)),
                ('can_access_leads', models.BooleanField(default=True)),
                ('can_access_reports', models.BooleanField(default=False)),
                ('can_access_earnings', models.BooleanField(default=False)),
                ('can_access_clients', models.BooleanField(default=True)),
                ('can_access_calendar', models.BooleanField(default=True)),
                ('can_access_tasks', models.BooleanField(default=True)),
                ('can_access_analytics', models.BooleanField(default=False)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_members', to='dashboard.teammember')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user__first_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ManyToManyField(blank=True, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.taskcategory')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='dashboard.lead')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='dashboard.project')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.taskstage')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='projects/')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('is_featured', models.BooleanField(default=False)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='dashboard.project')),
            ],
            options={
                'ordering': ['-is_featured', '-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('lead', 'Lead'), ('task', 'Task'), ('event', 'Event'), ('birthday', 'Birthday'), ('anniversary', 'Anniversary'), ('system', 'System'), ('announcement', 'Announcement'), ('ivr_call', 'IVR Call'), ('whatsapp', 'WhatsApp'), ('stage_change', 'Stage Change')], default='system', max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('related_object_type', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_date', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=255)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attendees', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_meetings', to=settings.AUTH_USER_MODEL)),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='dashboard.lead')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.project')),
            ],
            options={
                'ordering': ['-meeting_date'],
            },
        ),
        migrations.CreateModel(
            name='MarketingExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('google_ads', 'Google Ads'), ('facebook_ads', 'Facebook Ads'), ('linkedin_ads', 'LinkedIn Ads'), ('print_media', 'Print Media'), ('radio', 'Radio'), ('tv', 'Television'), ('outdoor', 'Outdoor Advertising'), ('events', 'Events & Exhibitions'), ('content_marketing', 'Content Marketing'), ('seo', 'SEO Services'), ('other', 'Other')], max_length=20)),
                ('campaign_name', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('date', models.DateField()),
                ('description', models.TextField(blank=True)),
                ('vendor', models.CharField(blank=True, max_length=255)),
                ('invoice_number', models.CharField(blank=True, max_length=100)),
                ('leads_generated', models.PositiveIntegerField(default=0)),
                ('cost_per_lead', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='LeadStageHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('duration_in_previous_stage', models.PositiveIntegerField(blank=True, help_text='Days in previous stage', null=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('from_stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='from_history', to='dashboard.leadstage')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stage_history', to='dashboard.lead')),
                ('to_stage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='to_history', to='dashboard.leadstage')),
            ],
            options={
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='LeadNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('call_type', models.CharField(choices=[('outgoing', 'Outgoing Call'), ('incoming', 'Incoming Call'), ('ivr_call', 'IVR Call'), ('missed_call', 'Missed Call'), ('meeting', 'Meeting'), ('site_visit', 'Site Visit'), ('virtual_meet', 'Virtual Meeting'), ('email', 'Email'), ('whatsapp', 'WhatsApp'), ('sms', 'SMS'), ('other', 'Other')], default='outgoing', max_length=20)),
                ('call_outcome', models.CharField(blank=True, choices=[('interested', 'Interested'), ('not_interested', 'Not Interested'), ('callback_requested', 'Callback Requested'), ('no_answer', 'No Answer'), ('busy', 'Busy'), ('wrong_number', 'Wrong Number'), ('site_visit_scheduled', 'Site Visit Scheduled'), ('virtual_meet_scheduled', 'Virtual Meeting Scheduled'), ('negotiation', 'In Negotiation'), ('deal_closed', 'Deal Closed'), ('follow_up_later', 'Follow Up Later')], max_length=30)),
                ('note', models.TextField(help_text='Detailed conversation notes')),
                ('next_action', models.CharField(blank=True, max_length=255)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('call_duration', models.PositiveIntegerField(blank=True, help_text='Duration in seconds', null=True)),
                ('call_recording_url', models.URLField(blank=True)),
                ('meeting_location', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='call_notes', to='dashboard.lead')),
                ('meeting_attendees', models.ManyToManyField(blank=True, related_name='attended_meetings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='lead',
            name='current_stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leads', to='dashboard.leadstage'),
        ),
        migrations.AddField(
            model_name='lead',
            name='interested_projects',
            field=models.ManyToManyField(blank=True, related_name='interested_leads', to='dashboard.project'),
        ),
        migrations.AddField(
            model_name='lead',
            name='original_lead',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.lead'),
        ),
        migrations.AddField(
            model_name='lead',
            name='previous_stage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous_leads', to='dashboard.leadstage'),
        ),
        migrations.AddField(
            model_name='lead',
            name='sticky_agent',
            field=models.ForeignKey(blank=True, help_text='Agent who first handled this lead', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sticky_leads', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='IVRCallLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=100, unique=True)),
                ('call_to_number', models.CharField(max_length=20)),
                ('caller_id_number', models.CharField(max_length=20)),
                ('call_id', models.CharField(blank=True, max_length=100)),
                ('start_stamp', models.DateTimeField()),
                ('end_stamp', models.DateTimeField(blank=True, null=True)),
                ('duration', models.PositiveIntegerField(default=0, help_text='Duration in seconds')),
                ('status', models.CharField(choices=[('received', 'Received'), ('answered', 'Answered'), ('ended', 'Ended'), ('failed', 'Failed'), ('busy', 'Busy'), ('no_answer', 'No Answer')], default='received', max_length=20)),
                ('billing_circle', models.CharField(blank=True, max_length=50)),
                ('customer_no_with_prefix', models.CharField(blank=True, max_length=30)),
                ('raw_data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed', models.BooleanField(default=False)),
                ('associated_lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ivr_calls', to='dashboard.lead')),
            ],
            options={
                'ordering': ['-start_stamp'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('event_type', models.CharField(choices=[('property_launch', 'Property Launch'), ('open_house', 'Open House'), ('seminar', 'Seminar'), ('exhibition', 'Exhibition'), ('webinar', 'Webinar'), ('site_visit', 'Group Site Visit'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('location', models.CharField(max_length=255)),
                ('venue_address', models.TextField()),
                ('max_capacity', models.PositiveIntegerField(blank=True, null=True)),
                ('registration_required', models.BooleanField(default=True)),
                ('registration_deadline', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_campaign_events', to=settings.AUTH_USER_MODEL)),
                ('featured_projects', models.ManyToManyField(blank=True, related_name='featured_events', to='dashboard.project')),
                ('team_members', models.ManyToManyField(blank=True, related_name='assigned_events', to='dashboard.teammember')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Earning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commission_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_earned', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('earned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.lead')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.project')),
            ],
            options={
                'ordering': ['-date_earned'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('source', models.CharField(choices=[('internal', 'Internal'), ('external', 'External')], max_length=20)),
                ('access_rights', models.TextField(blank=True, help_text='Describe access rights for this client')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_clients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CalendarEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('event_type', models.CharField(choices=[('meeting', 'Meeting'), ('site_visit', 'Site Visit'), ('follow_up', 'Follow Up'), ('team_meeting', 'Team Meeting'), ('training', 'Training'), ('birthday', 'Birthday'), ('anniversary', 'Anniversary'), ('other', 'Other')], default='meeting', max_length=20)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('all_day', models.BooleanField(default=False)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('color', models.CharField(default='#4f46e5', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notification_sent', models.BooleanField(default=False)),
                ('attendees', models.ManyToManyField(blank=True, related_name='calendar_events', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_calendar_events', to=settings.AUTH_USER_MODEL)),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='calendar_events', to='dashboard.lead')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='calendar_events', to='dashboard.project')),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='ProjectUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_number', models.CharField(max_length=50)),
                ('floor', models.PositiveIntegerField()),
                ('size', models.DecimalField(decimal_places=2, help_text='Size in sq ft', max_digits=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('available', 'Available'), ('booked', 'Booked'), ('sold', 'Sold')], default='available', max_length=20)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='dashboard.project')),
            ],
            options={
                'ordering': ['floor', 'unit_number'],
                'unique_together': {('project', 'unit_number')},
            },
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('attended', models.BooleanField(default=False)),
                ('attended_at', models.DateTimeField(blank=True, null=True)),
                ('follow_up_required', models.BooleanField(default=True)),
                ('follow_up_completed', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='dashboard.event')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_registrations', to='dashboard.lead')),
            ],
            options={
                'ordering': ['-registered_at'],
                'unique_together': {('event', 'lead')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('check_in_time', models.TimeField(blank=True, null=True)),
                ('check_out_time', models.TimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('half_day', 'Half Day'), ('work_from_home', 'Work From Home'), ('on_leave', 'On Leave')], default='present', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('working_hours', models.FloatField(blank=True, null=True)),
                ('check_in_latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('check_in_longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('check_in_address', models.TextField(blank=True)),
                ('check_out_latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('check_out_longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('check_out_address', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_manual_entry', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_attendance', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', 'employee__first_name'],
                'unique_together': {('employee', 'date')},
            },
        ),
    ]
